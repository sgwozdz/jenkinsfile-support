{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "jenkins",
  "scopeName": "source.jenkins",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#pipeline"
    },
    {
      "include": "#stage"
    },
    {
      "include": "#step"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#postConditions"
    },
    {
      "include": "#flowControl"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#string-single-quote-multiline"
    },
    {
      "include": "#string-double-quote-multiline"
    },
    {
      "include": "#string-single-quote"
    },
    {
      "include": "#string-double-quote"
    },
    {
      "include": "#comment"
    }
  ],
  "repository": {
    "pipeline": {
      "patterns": [
        {
          "name": "entity.name.class.jenkins",
          "match": "\\b(pipeline|script|library)\\b"
        }
      ]
    },
    "stage": {
      "patterns": [
        {
          "name": "keyword.other.jenkinsfile",
          "match": "\\b(stage)\\b"
        }
      ]
    },
    "step": {
      "patterns": [
        {
          "name": "entity.name.class.jenkinsfile",
          "match": "\\b(step)\\b"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.structure.jenkins",
          "match": "\\b(agent|post|stages|steps|environment|options|parameters|triggers|tools|input|when|parallel|matrix)\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "strong.jenkins",
          "match": "\\b(bat|node|powershell|sh|ws|echo|def|currentBuild|params|env|checkout|build|archiveArtifacts|publishHTML)\\b"
        },
        {
          "name": "support.function.utility.jenkins",
          "match": "\\b(string|timeout)\\b"
        }
      ]
    },
    "postConditions": {
      "patterns": [
        {
          "name": "constant.language.jenkins",
          "match": "\\b(always|changed|fixed|regression|aborted|failure|success|unstable|unsuccessful|cleanup)\\b"
        }
      ]
    },
    "flowControl": {
      "patterns": [
        {
          "name": "keyword.control.conditional.jenkins",
          "match": "\\b(if|else|try|catch|finally|throw|for|while|switch|case|default|break|continue|return)\\b"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.constant.jenkins",
          "match": "\\w+:|\\b(env|params|currentBuild)\\b"
        },
        {
          "name": "variable.other.property.jenkins",
          "match": "\\b(env|params|currentBuild)\\.[\\w.]+"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language.jenkins",
          "match": "\\b(true|false|null|this|super)\\b"
        }
      ]
    },
    "string-single-quote": {
      "name": "string.quoted.single.jenkins",
      "begin": "(?<!'')'",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.jenkins"
        }
      },
      "end": "'",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.jenkins"
        }
      },
      "patterns": [
        {
          "include": "#string-character-escape"
        },
        {
          "include": "#variable-usage"
        }
      ]
    },
    "string-double-quote": {
      "name": "string.quoted.double.jenkins",
      "begin": "(?<!\"\")\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.jenkins"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.jenkins"
        }
      },
      "patterns": [
        {
          "include": "#string-character-escape"
        },
        {
          "include": "#variable-usage"
        }
      ]
    },
    "string-single-quote-multiline": {
      "name": "string.quoted.single.multiline.jenkins",
      "begin": "'''",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.jenkins"
        }
      },
      "end": "'''",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.jenkins"
        }
      },
      "patterns": [
        {
          "include": "#string-character-escape"
        },
        {
          "include": "#variable-usage"
        }
      ]
    },
    "string-double-quote-multiline": {
      "name": "string.quoted.double.multiline.jenkins",
      "begin": "\"\"\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.jenkins"
        }
      },
      "end": "\"\"\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.jenkins"
        }
      },
      "patterns": [
        {
          "include": "#string-character-escape"
        },
        {
          "include": "#variable-usage"
        }
      ]
    },
    "string-character-escape": {
      "name": "constant.character.escape.jenkins",
      "match": "\\\\(['\"\\\\0abfnrtv]|x[0-9a-fA-F]{1,4}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4})"
    },
    "variable-usage": {
      "name": "variable.other.interpolated.jenkins",
      "match": "\\$\\{([^}]+)\\}",
      "captures": {
        "1": {
          "name": "variable.other.interpolated.jenkins"
        }
      }
    },
    "variable-property": {
      "name": "variable.other.property.jenkins",
      "match": "\\b(env|params|currentBuild)\\.[\\w.]+"
    },
    "comment": {
      "patterns": [
        {
          "name": "comment.block.jenkins",
          "begin": "/\\*",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.jenkins"
            }
          },
          "end": "\\*/",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.comment.jenkins"
            }
          }
        },
        {
          "begin": "(^\\s+)?(?=//)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.whitespace.comment.leading.jenkins"
            }
          },
          "end": "(?=$)",
          "patterns": [
            {
              "name": "comment.line.double-slash.jenkins",
              "begin": "(?<!/)//(?:(?!/)|(?=//))",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.comment.jenkins"
                }
              },
              "end": "(?=$)"
            }
          ]
        }
      ]
    },
    "jenkinsSpecific": {
      "patterns": [
        {
          "name": "support.constant.jenkins",
          "match": "\\b(any|none|label|dockerfile|kubernetes|jenkins|master|slave)\\b"
        }
      ]
    }
  }
}
